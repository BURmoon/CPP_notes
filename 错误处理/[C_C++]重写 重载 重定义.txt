## 重载

- 特征

  - 同一个作用域（在同一个类中）
  - 函数名字相同，参数个数、参数顺序、参数类型不同
  - 和函数返回值，没有关系
  - const也可以作为重载条件

- 示例

  ```
  int Add(int a, int b);
  double Add(double a, double b);
  ```

## 重定义

- 特征

  - 在不同的作用域下（一个在子类，一个在父类），函数名相同的两个函数构成重定义
  - 派生类的函数屏蔽了与其同名的基类函数
    - 子类（派生类）重新定义父类（基类）的同名成员（非virtual函数）
    - 如果函数同名，但是参数不同，此时不管有无virtual，基类的函数被隐藏
    - 如果函数同名，并且参数也相同，但是基类函数没有vitual关键字，此时基类的函数被隐藏
  - 如果想要调用父类的同名函数，就必须指定父类的域作用符

- 示例

  ```
  class A
  	void fun();
  class B : public A
  	void fun();
  ```

  - 若父类与子类的同名函数fun的参数相同

    - 定义一个B的对象b，当访问同名函数fun时，会访问子类B的fun
    - 定义一个B的对象b，当访问同名函数fun时，指定域为A，则会访问父类A的fun

  - 若父类与子类的同名函数fun的参数不同

    - 定义一个B的对象b，调用与父类同名函数fun时会出现错误

      因为子类隐藏了父类的同名成员函数，不指定域，只会调用子类的同名成员函数，而传的参数与子类同名成员函数的参数不同，所以会编译失败

    - 当指定作用域时，就会调用父类的同名函数

## 重写

- 特征

  - 派生类函数覆盖基类函数

    子类（派生类）重写父类（基类）的virtual函数，函数返回值、函数名字、函数参数，必须和基类中的虚函数一致



